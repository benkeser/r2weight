% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r2.compare.R
\name{r2.compare}
\alias{r2.compare}
\title{r2.compare}
\usage{
r2.compare(object1, object2, comparison = c("diff", "ratio"), alpha = 0.05)
}
\arguments{
\item{object1}{An object of either class \code{optWeight} or of class 
\code{r2.optWeight}. The class type should match that of \code{object2}.}

\item{object2}{An object of either class \code{optWeight} or of class 
\code{r2.optWeight}. The class type should match that of \code{object1}.}

\item{comparison}{What type of comparison should be made. Possible choices include
\code{"diff"} and \code{"ratio"}.}

\item{alpha}{The function returns a \code{(1-alpha)*100}% confidence interval. Default
is set to \code{0.05} (i.e., 95% confidence interval)}

\item{Y}{The \code{data.frame} of outcomes that was used to fit \code{object1}
and \code{object2}.}
}
\value{
Point estimate and confidence interval for the selected \code{comparison}(s).
}
\description{
Compare the R-squared values in two objects class \code{optWeight} or of 
class \code{r2.optWeight}. The former compares the R-squared values
for each outcome between the two \code{optWeight} objects, while the latter 
compares the R-squared values for the combined outcome of two \code{r2.optWeight}
objects.
}
\examples{
#' @examples
X <- data.frame(x1=runif(n=100,0,5), x2=runif(n=100,0,5))
Y1 <- rnorm(100, X$x1 + X$x2, 1)
Y2 <- rnorm(100, X$x1 + X$x2, 3)
Y <- data.frame(Y1 = Y1, Y2 = Y2)
fit1 <- optWeight(Y = Y, X = X, SL.library = c("SL.glm","SL.mean"), family = gaussian(),outerV = 10, return.CV.SuperLearner = FALSE)
perf.fit1 <- r2.optWeight(object = fit1, Y = Y, X = X, evalV = 5)
fit2 <- optWeight(Y = Y, X = X[,1,drop=FALSE], SL.library = c("SL.glm","SL.mean"), family = gaussian(),outerV = 10, return.CV.SuperLearner = FALSE)
perf.fit2 <- r2.optWeight(object = fit2, Y = Y, X = X[,1,drop=FALSE], evalV = 5)

# compare cross-validated r-squared for each outcome
comp <- r2.compare(fit1, fit2)
comp
# compare cross-validated r-squared for combined outcome
perf.comp <- r2.compare(perf.fit1, perf.fit2)
perf.comp
}

